Description: Catlean Backend - Autoscaling Group

Parameters:
  InstanceProfile:
    Type: String

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

  Env:
    Type: String
    Default: staging

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

  MinClusterSize:
    Type: Number
    Default: 1

  MaxClusterSize:
    Type: Number
    Default: 1

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id

  InstanceType:
    Type: String
    Default: t2.medium

  AmiImageId:
    Type: String

  ECSCluster:
    Type: String

  AssociatePublicIp:
    Type: String

Resources:
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: !Ref MinClusterSize
      MaxSize: !Ref MaxClusterSize
      DesiredCapacity: !Ref MinClusterSize
      MetricsCollection:
      - Granularity: 1Minute
      Tags:
      - Key: Name
        Value: Catlean Backend - ECS Host
        PropagateAtLaunch: true
      - Key: Project
        Value: !Sub CatleanBackend
        PropagateAtLaunch: true
      - Key: Env
        Value: !Ref Env
        PropagateAtLaunch: true

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: !Ref AssociatePublicIp
      KeyName: !Ref KeyName
      ImageId: !Ref AmiImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroups:
      - !Ref SecurityGroup
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash
          echo ECS_CLUSTER=${ECSCluster} > /etc/ecs/ecs.config

  StepScalingUp:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: StepScaling
      MetricAggregationType: Average
      StepAdjustments:
      - MetricIntervalLowerBound: 0
        MetricIntervalUpperBound: 50
        ScalingAdjustment: 1
      - MetricIntervalLowerBound: 50
        ScalingAdjustment: 2

  StepScalingDown:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: StepScaling
      MetricAggregationType: Average
      StepAdjustments:
      - MetricIntervalUpperBound: 0
        ScalingAdjustment: -1

  InstancesMemoryReservedAlarmScaleDown:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 4
      Statistic: Average
      AlarmName: !Sub CatleanBackendAutoscalingMemoryReservedScaleDownAlarm-${Env}
      Threshold: 30
      AlarmDescription: Alarm if memory reserved by the instances is too low
      Period: 60
      AlarmActions:
      - !Ref StepScalingDown
      Namespace: AWS/ECS
      Dimensions:
      - Name: ClusterName
        Value: !Ref ECSCluster
      ComparisonOperator: LessThanThreshold
      MetricName: MemoryReservation

  InstancesMemoryReservedAlarmScaleUp:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      AlarmName: !Sub CatleanBackendAutoscalingMemoryReservedScaleUpAlarm-${Env}
      Statistic: Average
      Threshold: 60
      AlarmDescription: Alarm if memory reserved by the instances is too high
      Period: 60
      AlarmActions:
      - !Ref StepScalingUp
      Namespace: AWS/ECS
      Dimensions:
      - Name: ClusterName
        Value: !Ref ECSCluster
      ComparisonOperator: GreaterThanThreshold
      MetricName: MemoryReservation

Outputs:
  AutoScaling:
    Value: !Ref AutoScalingGroup
