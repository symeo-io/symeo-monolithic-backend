AWSTemplateFormatVersion: '2010-09-09'

Description: Catlean Backend - Application Load Balancer

Parameters:
  AlbName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: symeo-backend-alb

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to

  Subnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  SecurityGroup:
    Description: Select the Security Group to apply to the Application Load Balancer
    Type: AWS::EC2::SecurityGroup::Id

  Env:
    Description: The environment name deployed
    Type: String
    Default: staging

  CertificateArn:
    Type: String
    Description: Arn of the SSL certificate

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AlbName}-${Env}
      Subnets: !Ref Subnets
      LoadBalancerAttributes:
      - Key: access_logs.s3.enabled
        Value: false
      SecurityGroups:
      - !Ref SecurityGroup
      Tags:
      - Key: Name
        Value: !Sub ${AlbName}-${Env}
      - Key: Project
        Value: CatleanBackend
      - Key: Env
        Value: !Ref Env

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
      - CertificateArn: !Ref CertificateArn
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      VpcId: !Ref VpcId
      Port: 80
      Protocol: HTTP
      TargetType: ip
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /actuator/health
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 120

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
      Conditions:
      - Field: path-pattern
        Values:
        - /
      Actions:
      - TargetGroupArn: !Ref TargetGroup
        Type: forward

Outputs:
  ServiceUrl:
    Value: !Sub http://${LoadBalancer.DNSName}
  ServiceId:
    Value: !GetAtt LoadBalancer.DNSName
  TargetGroup:
    Value: !Ref TargetGroup
  TargetGroupName:
    Value: !GetAtt TargetGroup.TargetGroupFullName
  AlbName:
    Value: !GetAtt LoadBalancer.LoadBalancerFullName
