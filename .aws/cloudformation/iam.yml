AWSTemplateFormatVersion: '2010-09-09'

Description: Catlean Backend - IAM Roles

Parameters:
  Env:
    Type: String
    Default: staging

Resources:
  CatleanBackendAutoScaleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub catlean-backend-autoscale-role-${Env}
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "application-autoscaling.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole

  CatleanBackendECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub catlean-backend-ecs-execution-role-${Env}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
      -
          PolicyName: !Sub S3Access-${Env}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "s3:*"
                Resource:
                  - "*"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  CatleanBackendTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub catlean-backend-task-role-${Env}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "ecs-tasks.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /
      Policies:
      -
        PolicyName: !Sub LogAuthorization-${Env}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource: "*"
      -
        PolicyName: !Sub S3Access-${Env}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "s3:*"
            Resource:
            - "*"
      -
        PolicyName: !Sub DataDog-${Env}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "apigateway:GET"
            - "autoscaling:Describe*"
            - "backup:List*"
            - "budgets:ViewBudget"
            - "cloudfront:GetDistributionConfig"
            - "cloudfront:ListDistributions"
            - "cloudtrail:DescribeTrails"
            - "cloudtrail:GetTrailStatus"
            - "cloudtrail:LookupEvents"
            - "cloudwatch:Describe*"
            - "cloudwatch:Get*"
            - "cloudwatch:List*"
            - "codedeploy:List*"
            - "codedeploy:BatchGet*"
            - "directconnect:Describe*"
            - "dynamodb:List*"
            - "dynamodb:Describe*"
            - "ec2:Describe*"
            - "ecs:Describe*"
            - "ecs:List*"
            - "elasticache:Describe*"
            - "elasticache:List*"
            - "elasticfilesystem:DescribeFileSystems"
            - "elasticfilesystem:DescribeTags"
            - "elasticfilesystem:DescribeAccessPoints"
            - "elasticloadbalancing:Describe*"
            - "elasticmapreduce:List*"
            - "elasticmapreduce:Describe*"
            - "es:ListTags"
            - "es:ListDomainNames"
            - "es:DescribeElasticsearchDomains"
            - "fsx:DescribeFileSystems"
            - "fsx:ListTagsForResource"
            - "health:DescribeEvents"
            - "health:DescribeEventDetails"
            - "health:DescribeAffectedEntities"
            - "kinesis:List*"
            - "kinesis:Describe*"
            - "lambda:GetPolicy"
            - "lambda:List*"
            - "logs:DeleteSubscriptionFilter"
            - "logs:DescribeLogGroups"
            - "logs:DescribeLogStreams"
            - "logs:DescribeSubscriptionFilters"
            - "logs:FilterLogEvents"
            - "logs:PutSubscriptionFilter"
            - "logs:TestMetricFilter"
            - "organizations:DescribeOrganization"
            - "rds:Describe*"
            - "rds:List*"
            - "redshift:DescribeClusters"
            - "redshift:DescribeLoggingStatus"
            - "route53:List*"
            - "s3:GetBucketLogging"
            - "s3:GetBucketLocation"
            - "s3:GetBucketNotification"
            - "s3:GetBucketTagging"
            - "s3:ListAllMyBuckets"
            - "s3:PutBucketNotification"
            - "ses:Get*"
            - "sns:List*"
            - "sns:Publish"
            - "sqs:ListQueues"
            - "states:ListStateMachines"
            - "states:DescribeStateMachine"
            - "support:DescribeTrustedAdvisor*"
            - "support:RefreshTrustedAdvisorCheck"
            - "tag:GetResources"
            - "tag:GetTagKeys"
            - "tag:GetTagValues"
            - "xray:BatchGetTraces"
            - "xray:GetTraceSummaries"
            Resource:
            - "*"


Outputs:
  CatleanBackendAutoScaleRole:
    Value: !Ref CatleanBackendAutoScaleRole
  CatleanBackendECSExecutionRole:
    Value: !Ref CatleanBackendECSExecutionRole
  CatleanBackendTaskRole:
    Value: !Ref CatleanBackendTaskRole
