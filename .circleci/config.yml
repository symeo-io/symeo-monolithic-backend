version: 2.1
machine: true
orbs:
  aws-cli: circleci/aws-cli@3.1
  slack: circleci/slack@4.10.1

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package -T 6
      - save_cache:
          key: build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - bootstrap/target/
      - run:
          name: Test
          command: mvn test -T 6
      - run:
          name: Integration Test
          command: mvn integration-test -T 4
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1
  deploy:
    executor: aws-cli/default
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup
      - restore_cache:
          key: build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Prepare Github App private key
          command: |
            source .aws/prepare_github_certificate.sh
            prepare_github_private_key $PWD
      - run:
          name: Build docker
          command: |
            cd .aws && ./build_docker.sh \
              --region ${AWS_REGION} \
              --env ${ENVIRONMENT} \
              --tag ${CIRCLE_SHA1}
      - run:
          name: Deploy
          command: |
            cd .aws && ./deploy.sh \
              --region ${AWS_REGION} \
              --env ${ENVIRONMENT} \
              --datadog-api-key ${DATADOG_API_KEY} \
              --db-password ${DB_PASSWORD} \
              --tag ${CIRCLE_SHA1}
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1
  build-aws-infrastructure:
    executor: aws-cli/default
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup
      - restore_cache:
          key: build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Build
          command: mvn -B -DskipTests clean package -T 6
      - run:
          name: Build infrastructure
          command: |
            cd .aws && ./build_infrastructure.sh \
              --region ${AWS_REGION} \
              --env ${ENVIRONMENT} \
              --datadog-api-key ${DATADOG_API_KEY} \
              --db-password ${DB_PASSWORD} \
              --key-name catlean-backend-${ENVIRONMENT} \
              --domain ${DOMAIN} \
              --prefix-url ${PREFIX_URL} \
              --acm-arn ${ACM_ARN} \
              --acm-arn-alb ${ACM_ARN_ALB} \
              --tag ${CIRCLE_SHA1} \
              --vpc-id ${VPC_ID} \
              --subnets ${SUBNETS}
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

workflows:
  build-test-deploy:
    jobs:
      - build-and-test:
          context:
            - slack-notifications
      - deploy:
          requires:
            - build-and-test
          context:
            - staging
            - slack-notifications
          filters:
            branches:
              only:
                - staging
  build-infrastructure:
    jobs:
      - build-aws-infrastructure:
          context:
            - staging
            - slack-notifications
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^infrastructure-staging-.+$/