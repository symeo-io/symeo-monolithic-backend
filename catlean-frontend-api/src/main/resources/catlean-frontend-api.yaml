openapi: 3.0.3
info:
  version: 1.0.0-SNAPSHOT
  title: Catlean Monolithic Frontend API
servers:
  - url: http://localhost:9999
    description: Local
  - url: https://api-staging.catlean.fr
    description: Staging

paths:
  /api/v1/me:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - User
      summary: Get Current Logged In User
      operationId: getCurrentUser
      description: |
        Get Current Logged In User
      responses:
        "200":
          description: 'Successfully current user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUserResponseContract'
              example:
                user:
                  id: 818e351a-0421-11ed-b939-0242ac120002
                  email: john.doe@catlean.fr
                  organization:
                    id: 42
                    name: Catlean
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
  /api/v1/me/organization:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - User
      summary: Link Current Logged In User to Organization
      operationId: linkCurrentUserToOrganization
      description: |
        Link Current Logged In User to Organization based on vcs external id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkOrganizationToCurrentUserRequestContract'
      responses:
        "200":
          description: 'Successfully linked organization to current user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUserResponseContract'
              example:
                user:
                  id: 818e351a-0421-11ed-b939-0242ac120002
                  email: john.doe@catlean.fr
                  organization:
                    id: 42
                    name: Catlean
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
  /api/v1/me/onboarding:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - User
      summary: Update onboarding linked to current user
      operationId: updateOnboarding
      description: |
        Update onboarding linked to current user based on the onboarding id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOnboardingRequestContract'
      responses:
        "200":
          description: 'Successfully updated onboarding linked to current user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOnboardingResponseContract'
              example:
                onboarding:
                  id: 0e075bcc-446a-4e92-a2f0-38c04b4b147f
                  has_connected_to_vcs: true
                  has_configured_team: false
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
  /api/v1/organizations/users:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Organization
      summary: Get Users linked to current Organization
      operationId: getUsersFromOrganization
      description: |
        Get Users linked to current Organization
      responses:
        "200":
          description: 'Successfully get users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponseContract'
              example:
                users:
                  - id: 818e351a-0421-11ed-b939-0242ac120002
                    email: john.doe@catlean.fr
                    status: ACTIVE
                  - id: fb97c650-1eeb-42a5-88e0-89c549696b15
                    email: jean-michel.biox@sextan.fr
                    status: PENDING
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Organization
      summary: Create Users linked to current Organization
      operationId: createUsersToOrganization
      description: |
        Create Users linked to current Organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserRequestContract'
      responses:
        "200":
          description: 'Successfully post users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponseContract'
              example:
                users:
                  - id: 818e351a-0421-11ed-b939-0242ac120002
                    email: john.doe@catlean.fr
                    status: ACTIVE
                  - id: fb97c650-1eeb-42a5-88e0-89c549696b15
                    email: jean-michel.biox@sextan.fr
                    status: PENDING
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Organization
      summary: Remove User from Organization
      operationId: removeUserFromOrganization
      description: |
        Remove User from Organization
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: User Id
      responses:
        "200":
          description: 'Successfully remove user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponseContract'
              example:
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"

  /api/v1/repositories:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Repository
      summary: Get repository linked to current user organization
      description: |
        Get repository linked to current user organization
      responses:
        "200":
          description: 'Successfully get repositories linked to current user organization'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepositoriesResponseContract'
              example:
                repository:
                  - id: "11111"
                    name: repo-1
                  - id: "22222"
                    name: repo-2
                  - id: "33333"
                    name: repo-3
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "F.REPOSITORIES_NOT_FOUND"
                    message: "Failed to find repositories"

  /api/v1/teams:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Team
      summary: Create a team linked to the authenticated user organization
      operationId: createTeam
      description: |
        Create a team linked to the authenticated user organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateTeamsRequestContract'
      responses:
        "200":
          description: 'Successfully create team linked organization to current user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsResponseContract'
              example:
                teams:
                  - id: 818e351a-0421-11ed-b939-0242ac120002
                    name: first-team
                    repository_ids: [ "aaa","bbb","ccc" ]
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
    patch:
      security:
        - bearerAuth: [ ]
      tags:
        - Team
      summary: Update team
      operationId: updateTeam
      description: |
        Update team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequestContract'
      responses:
        "200":
          description: 'Successfully create team linked organization to current user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Team
      summary: Get teams linked to the authenticated user organization
      operationId: getTeams
      description: |
        Get teams linked to the authenticated user organization
      responses:
        "200":
          description: 'Successfully get teams linked organization to current user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsResponseContract'
              example:
                teams:
                  - id: 818e351a-0421-11ed-b939-0242ac120002
                    name: first-team
                    repository_ids: [ "aaa","bbb","ccc" ]
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Team
      summary: Delete team
      operationId: deleteTeam
      description: |
        Delete team for id
      parameters:
        - in: query
          name: team_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 'Successfully delete team'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
  /api/v1/teams/goals:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Goals
      summary: Create a team goal linked to a team
      operationId: createTeamGoal
      description: |
        Create a team goal linked to a team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateTeamGoalsRequest'
      responses:
        "200":
          description: 'Successfully create team goal'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Goals
      summary: Get TeamGoals linked to Team Id
      operationId: getTeamGoals
      description: |
        Get TeamGoals linked to Team Id
      parameters:
        - in: query
          name: team_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 'Successfully get team goals'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGoalsResponseContract'
              example:
                errors: { }
                team_goals:
                  - id: 7742114f-4a11-4e83-a83a-50a5b36a0d9b
                    code: time-to-merge
                    value: 10
                    current_value: 13.2
                  - id: 02399ee4-776b-4c16-aced-6f239749b1ad
                    code: maximum-size-to-merge
                    value: 1000
                    current_value: 2129.5
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
    patch:
      security:
        - bearerAuth: [ ]
      tags:
        - Goals
      summary: Update TeamGoal
      operationId: updateTeamGoal
      description: |
        Update TeamGoal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTeamGoalsRequest'
      responses:
        "200":
          description: 'Successfully update team goal'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Goals
      summary: Delete TeamGoal
      operationId: deleteTeamGoal
      description: |
        Delete TeamGoal
      parameters:
        - in: query
          name: team_goal_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 'Successfully delete team goal'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"

        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"

  /api/v1/teams/goals/time-to-merge/histogram:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Goals
      summary: Get TimeToMerge Histogram
      operationId: getTimeToMergeHistogram
      description: |
        Get TimeToMerge Histogram
      parameters:
        - in: query
          name: team_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 'Successfully retrieved time to merge histogram'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHistogramResponseContract'
              example:
                histogram:
                  data:
                    - start_date_range: 12/08/1992
                      data_above_limit: 11
                      data_below_limit: 22
                    - start_date_range: 24/09/1992
                      data_above_limit: 1
                      data_below_limit: 10
                  limit: 5
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
  /api/v1/teams/goals/time-to-merge/curves:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Goals
      summary: Get TimeToMerge Curve
      operationId: getTimeToMergeCurve
      description: |
        Get TimeToMerge Curve
      parameters:
        - in: query
          name: team_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 'Successfully retrieved time to merge curve'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCurveResponseContract'
              example:
                curves:
                  piece_curve:
                    - date: 12/08/1992
                      value: 10
                      piece_open: false
                    - date: 12/09/1992
                      value: 22
                      piece_open: true
                  average_curve:
                    - value: 3
                      date: 12/08/1992
                    - value: 4
                      date: 12/00/1992
                  limit: 5
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"

  /api/v1/teams/goals/pull-request-size/histogram:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Goals
      summary: Get PullRequestSize Histogram
      operationId: getPullRequestSizeHistogram
      description: |
        Get PullRequestSize Histogram
      parameters:
        - in: query
          name: team_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 'Successfully retrieved pull request size histogram'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHistogramResponseContract'
              example:
                histogram:
                  data:
                    - start_date_range: 12/08/1992
                      data_above_limit: 11
                      data_below_limit: 22
                    - start_date_range: 24/09/1992
                      data_above_limit: 1
                      data_below_limit: 10
                  limit: 5
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"
  /api/v1/teams/goals/pull-request-size/curves:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Goals
      summary: Get PullRequestSize Curve
      operationId: getPullRequestSizeCurve
      description: |
        Get PullRequestSize Curve
      parameters:
        - in: query
          name: team_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 'Successfully retrieved pull request size curve'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCurveResponseContract'
              example:
                curves:
                  piece_curve:
                    - date: 12/08/1992
                      value: 10
                      piece_open: false
                    - date: 12/09/1992
                      value: 22
                      piece_open: true
                  average_curve:
                    - value: 3
                      date: 12/08/1992
                    - value: 4
                      date: 12/00/1992
                  limit: 5
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"

  /api/v1/jobs/last-two:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Job
      parameters:
        - in: query
          name: job_code
          required: true
          schema:
            type: string
      summary: Get last two jobs linked to job code
      operationId: getLastTwoJobsForCode
      description: |
        Get last two jobs linked to job code
      responses:
        "200":
          description: 'Successfully get last two jobs for code'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastTwoJobsResponseContract'
              example:
                jobs:
                  last_job:
                    - id: 49b377f1-9533-488c-ba29-e1f6224a333c
                      status: STARTED
                      code: COLLECT_PULL_REQUESTS_FOR_ORGANIZATION_JOB
                      creation_date: 2022-07-21T17:32:28Z
                      end_date: null
                  previous_last_job: null
                errors:
                  [ ]
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          description: An internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatleanErrorsContract'
              example:
                errors:
                  - code: "T.POSTGRES_TIMEOUT"
                    message: "Failed to open connection with database"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    CatleanErrorsContract:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    CatleanErrorContract:
      type: object
      required:
        - code
        - message
        - metadata
      properties:
        code:
          type: string
          example: F.NOT_FOUND
        message:
          type: string
          example: Histogram not found
        metadata:
          type: object
    HistogramDataResponseContract:
      required:
        - start_date_range
        - data_above_limit
        - data_below_limit
      properties:
        start_date_range:
          type: string
          example: 12/08/1992
        data_above_limit:
          type: integer
          example: 95
        data_below_limit:
          type: integer
          example: 111
    GetCurveResponseContract:
      type: object
      properties:
        curves:
          $ref: '#/components/schemas/CurveResponseContract'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    CurveResponseContract:
      type: object
      required:
        - limit
        - average_curve
        - piece_curve
      properties:
        limit:
          type: integer
        average_curve:
          type: array
          items:
            $ref: '#/components/schemas/CurveDataResponseContract'
        piece_curve:
          type: array
          items:
            $ref: '#/components/schemas/PieceCurveDataResponseContract'
    CurveDataResponseContract:
      type: object
      properties:
        value:
          type: integer
        date:
          type: string
    PieceCurveDataResponseContract:
      type: object
      properties:
        value:
          type: integer
        date:
          type: string
        open:
          type: boolean
    GetHistogramResponseContract:
      type: object
      properties:
        histogram:
          $ref: '#/components/schemas/HistogramResponseContract'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    HistogramResponseContract:
      type: object
      required:
        - data
        - limit
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HistogramDataResponseContract'
        limit:
          type: integer
    OrganizationContract:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 8ad1c7ea-0421-11ed-b939-0242ac120002
        name:
          type: string
          example: Catlean
    OnboardingContract:
      type: object
      required:
        - id
        - has_connected_to_vcs
        - has_configured_team
      properties:
        id:
          type: string
          format: uuid
        has_connected_to_vcs:
          type: boolean
        has_configured_team:
          type: boolean
    UpdateOnboardingRequestContract:
      type: object
      required:
        - has_connected_to_vcs
        - has_configured_team
      properties:
        has_connected_to_vcs:
          type: boolean
        has_configured_team:
          type: boolean
    UserContract:
      type: object
      required:
        - id
        - email
        - organization
        - onboarding
      properties:
        id:
          type: string
          format: uuid
          example: 16
        email:
          type: string
          format: email
          example: john.doe@catlean.fr
        organization:
          $ref: '#/components/schemas/OrganizationContract'
        onboarding:
          $ref: '#/components/schemas/OnboardingContract'
    CurrentUserResponseContract:
      type: object
      required:
        - user
        - organization
      properties:
        user:
          $ref: '#/components/schemas/UserContract'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    LinkOrganizationToCurrentUserRequestContract:
      type: object
      required:
        - externalId
      properties:
        externalId:
          type: string
          example: 123456543
    GetRepositoriesResponseContract:
      type: object
      properties:
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryResponseContract'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    RepositoryResponseContract:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    PostCreateTeamsRequestContract:
      type: array
      items:
        $ref: '#/components/schemas/CreateTeamRequestContract'
    CreateTeamRequestContract:
      type: object
      properties:
        name:
          type:
            string
        repository_ids:
          type: array
          items:
            type: string
    UpdateTeamRequestContract:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type:
            string
        repository_ids:
          type: array
          items:
            type: string
    TeamsResponseContract:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: '#/components/schemas/CreateTeamResponseContract'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    CreateTeamResponseContract:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        repository_ids:
          type: array
          items:
            type: string
    PostOnboardingResponseContract:
      type: object
      properties:
        onboarding:
          $ref: '#/components/schemas/OnboardingContract'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    UsersResponseContract:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserResponseContract'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    UserResponseContract:
      type: object
      properties:
        email:
          type: string
          format: email
        status:
          type: string
        id:
          type: string
          format: uuid
    UserRequestContract:
      type: object
      properties:
        email:
          type: string
          format: email
    PostUserRequestContract:
      type: array
      items:
        $ref: '#/components/schemas/UserRequestContract'
    DeleteUserResponseContract:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
    PostCreateTeamGoalsRequest:
      type: object
      required:
        - standard_code
        - team_id
        - value
      properties:
        standard_code:
          type: string
        team_id:
          type: string
          format: uuid
        value:
          type: integer
    TeamGoalResponse:
      type: object
      required:
        - id
        - standard_code
        - team_id
        - value
        - current_value
      properties:
        id:
          type: string
          format: uuid
        standard_code:
          type: string
        team_id:
          type: string
          format: uuid
        value:
          type: integer
        current_value:
          type: number
          format: double
    TeamGoalsResponseContract:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'
        team_goals:
          type: array
          items:
            $ref: '#/components/schemas/TeamGoalResponse'
    PatchTeamGoalsRequest:
      type: object
      required:
        - id
        - value
      properties:
        id:
          type: string
          format: uuid
        value:
          type: integer
    JobContract:
      type: object
      required:
        - id
        - status
        - code
        - creation_date
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
        status:
          type: string
        creation_date:
          type: number
          format: date-time
        end_date:
          type: number
          format: date-time
    LastTwoJobsContract:
      type: object
      required:
        - last_job
      properties:
        last_job:
          $ref: '#/components/schemas/JobContract'
        previous_last_job:
          $ref: '#/components/schemas/JobContract'
    LastTwoJobsResponseContract:
      type: object
      properties:
        jobs:
          $ref: '#/components/schemas/LastTwoJobsContract'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CatleanErrorContract'